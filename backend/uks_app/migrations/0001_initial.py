# Generated by Django 3.0.2 on 2020-08-22 15:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=120)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('color', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CodeChange',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='uks_app.Event')),
                ('url', models.URLField(max_length=120)),
            ],
            bases=('uks_app.event',),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='uks_app.Event')),
                ('text', models.CharField(max_length=240)),
            ],
            bases=('uks_app.event',),
        ),
        migrations.CreateModel(
            name='StateChange',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='uks_app.Event')),
                ('new_state', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed')], max_length=6)),
            ],
            bases=('uks_app.event',),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('description', models.CharField(max_length=120)),
                ('git_repo', models.CharField(max_length=120)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uks_app.Account')),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('state', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed')], max_length=6)),
                ('labels', models.ManyToManyField(to='uks_app.Label')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uks_app.Project')),
                ('related_issues', models.ManyToManyField(related_name='_issue_related_issues_+', to='uks_app.Issue')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uks_app.Issue'),
        ),
        migrations.CreateModel(
            name='ControlPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uks_app.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ResponsibleChange',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='uks_app.Event')),
                ('responsible', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='uks_app.Account')),
            ],
            bases=('uks_app.event',),
        ),
        migrations.CreateModel(
            name='ControlPointChange',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='uks_app.Event')),
                ('control_point', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='uks_app.ControlPoint')),
            ],
            bases=('uks_app.event',),
        ),
        migrations.CreateModel(
            name='CommentChange',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='uks_app.Event')),
                ('changed_comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uks_app.Comment')),
            ],
            bases=('uks_app.event',),
        ),
    ]
